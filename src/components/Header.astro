
---
import AboutMe from './icons/AboutMe.astro';
import Briefcase from './icons/Briefcase.astro';
import Code from './icons/Code.astro';
import LinkedIn from './icons/LinkedIn.astro';
import GitHub from './icons/GitHub.astro';
import Mail from './icons/Mail.astro';
import Instagram from './icons/Instagram.astro';

const navItems = [
  {
    title: Code,
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: Briefcase,
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: AboutMe,
    label: "acerca-de-mi",
    url: "/#acerca-de-mi",
  },
  {
    title: Mail,
    label: "contacto",
    url: "mailto:leibertrejo8@gmail.com",
  },
  {
    title: "",
    label: "",
    url: "",
  },
  {
    title: GitHub,
    label: "github",
    url: "https://github.com/lemaufo",
    external: true,
  },
  {
    title: LinkedIn,
    label: "linkedin",
    url: "https://linkedin.com/in/leiber-trejo",
    external: true,
  },
  {
    title: Instagram,
    label: "instagram",
    url: "https://instagram.com/lemaufo",
    external: true,
  }
]
---

<header
  class=" fixed top-4 z-10 flex items-center justify-center w-full mx-auto"
>
  <nav
    class="bg-slate-600/30 backdrop-blur-lg flex px-3 rounded-full justify-center items-center"
  >
  
    {navItems.map((item) => (
      
      <a 
        href={item.url} 
        class="m-3 text-white-100 hover:text-sky-500 transition-colors duration-300"
        {...(item.external ? { target: "_blank", rel: "noopener noreferrer" } : {})}
      >
        {typeof item.title === "string" ? item.title : <item.title />}
      </a>
      
    ))}
  
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500")
            } else {
              item.classList.remove("text-blue-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

</style>